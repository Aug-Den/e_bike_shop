from pymongo import MongoClient
from bson.objectid import ObjectId
import datetime as dt
import random
import pprint
import manager_mongodb_user as user
import const_values as cv


def create_collection_invoice():
    """Cr√©e la collection Invoice avec sch√©ma de validation et ins√®re une facture g√©n√©r√©e dynamiquement."""
    client = MongoClient(cv.MONGODB_LOCAL_PATH)
    db = client[cv.MONGODB_NAME]

    # 1. Sch√©ma JSON
    schema = {
        "bsonType": "object",
        "required": ["date", "shoppingcart"],
        "properties": {
            "date": {"bsonType": "date"},
            "shoppingcart": {
                "bsonType": "array",
                "minItems": 1,
                "items": {
                    "bsonType": "object",
                    "required": ["id_product", "price_ET", "quantity", "rate_VAT"],
                    "properties": {
                        "id_product": {"bsonType": "objectId"},
                        "price_ET": {"bsonType": "double", "minimum": 0.0},
                        "quantity": {"bsonType": "int", "minimum": 0},
                        "rate_VAT": {"bsonType": "double", "minimum": 0.0},
                    },
                },
            },
        },
    }

    # 2. Cr√©ation de la collection
    try:
        db.create_collection(
            "Invoice", validator={"$jsonSchema": schema}, validationLevel="strict"
        )
        print("‚úÖ Collection 'Invoice' cr√©√©e avec validation.")
    except Exception as e:
        print("‚ö†Ô∏è Collection existante ou erreur :", e)
        db.Invoice.drop()
        print("‚ôªÔ∏è Collection 'Invoice' supprim√©e et recr√©√©e.")
        db.create_collection(
            "Invoice", validator={"$jsonSchema": schema}, validationLevel="strict"
        )

    # 3. R√©cup√©ration des produits
    products = user.create_shoppingcart(5)

    # 4. Cr√©ation de la facture
    invoice_data = {
        "date": dt.datetime.now(),
        "shoppingcart": products,
    }

    print("üßæ Facture g√©n√©r√©e :")
    pprint.pprint(invoice_data)

    # 5. Insertion dans MongoDB
    try:
        result = db["Invoice"].insert_one(invoice_data)
        print("‚úÖ Facture ins√©r√©e avec ID :", result.inserted_id)
    except Exception as insert_error:
        print("‚ùå Erreur √† l'insertion :", insert_error)


if __name__ == "__main__":
    create_collection_invoice()
